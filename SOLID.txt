S - single responsibility- при вносении изменений должен менятся лишь один класс, т.е класс отвечает лишь за одну функциональность
O - open- closed, класс открыт для расширения но не для изменения
L - liskov principle , подклассы могли служить заменой класса родителя
I - interface segregation - не пихать слишком много методов в интерфейс
D - dependency inversion - класс не зависит от нискоуровневых модулей(снова фигачить интерфейсы)